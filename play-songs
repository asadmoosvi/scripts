#!/usr/bin/env python3
import shutil
import subprocess
import textwrap
from typing import List, Tuple

import click


def play_song(song: str) -> None:
    click.secho(
        f'Searching for song {song!r} ...', err=True, fg='green', bold=True
    )
    proc = subprocess.run(
        ['youtube-dl', '-x', '--get-url', f'ytsearch: {song}'],
        capture_output=True,
        text=True,
    )
    click.secho('Playing song ...\n', err=True, fg='green', bold=True)
    subprocess.run(['mpv', proc.stdout])
    click.echo(err=True)


@click.command()
@click.argument('songs', nargs=-1)
@click.option(
    '-f',
    '--songs-file',
    type=click.Path(exists=True),
    help=(
        'Name of songs file containing list of song names'
        ' separated with a newline.'
    ),
)
@click.help_option('-h', '--help')
@click.pass_context
def main(ctx: click.Context, songs: Tuple[str, ...], songs_file: str) -> None:
    """Search for songs on youtube and play only their audio using mpv."""
    # ensure mpv and youtube-dl are installed
    if not (shutil.which('mpv') and shutil.which('youtube-dl')):
        click.secho(
            'ERROR: please make sure you have installed mpv and youtube-dl '
            'as dependencies before running this script.',
            err=True,
            fg='red',
            bold=True,
        )
        ctx.exit(1)

    songs_list: List[str] = []
    songs_list.extend(songs)
    if songs_file:
        with open(songs_file) as f:
            songs_list.extend([song_name.strip() for song_name in f])

    if not songs_list:
        click.secho(
            'ERROR: no song names received as input. If you are using a song '
            'names file, ensure that it is not empty.',
            err=True,
            fg='red',
            bold=True,
        )
        ctx.exit(1)

    songs_list_str = '\n'.join(songs_list)
    click.secho(
        f'Songs list:\n{textwrap.indent(songs_list_str, "  - ")}\n',
        err=True,
        fg='magenta',
        bold=True,
    )
    for song in songs_list:
        play_song(song)


if __name__ == '__main__':
    main()
